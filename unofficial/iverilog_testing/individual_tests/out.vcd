$date
	Thu Dec 17 23:19:27 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module drive $end
$var wire 1 ! Rt_execute $end
$var reg 1 " Rt_decode $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$scope module decode_execute_register $end
$var wire 6 % ALU_function_decode [5:0] $end
$var wire 2 & ALU_src_B_decode [1:0] $end
$var wire 1 ' HALT_decode $end
$var wire 1 ( HI_register_write_decode $end
$var wire 1 ) LO_register_write_decode $end
$var wire 5 * Rd_decode [4:0] $end
$var wire 5 + Rs_decode [4:0] $end
$var wire 5 , Rt_decode [4:0] $end
$var wire 1 - clear $end
$var wire 1 # clk $end
$var wire 1 . j_instruction_decode $end
$var wire 32 / j_program_counter_decode [31:0] $end
$var wire 1 0 memory_to_register_decode $end
$var wire 1 1 memory_write_decode $end
$var wire 6 2 op_decode [5:0] $end
$var wire 1 3 program_counter_multiplexer_jump_decode $end
$var wire 32 4 program_counter_plus_four_decode [31:0] $end
$var wire 2 5 register_destination_decode [1:0] $end
$var wire 1 6 register_write_decode $end
$var wire 1 $ reset $end
$var wire 32 7 sign_imm_decode [31:0] $end
$var wire 32 8 src_A_decode [31:0] $end
$var wire 32 9 src_B_decode [31:0] $end
$var wire 1 : using_HI_LO_decode $end
$var reg 6 ; ALU_function_execute [5:0] $end
$var reg 2 < ALU_src_B_execute [1:0] $end
$var reg 1 = HALT_execute $end
$var reg 1 > HI_register_write_execute $end
$var reg 1 ? LO_register_write_execute $end
$var reg 5 @ Rd_execute [4:0] $end
$var reg 5 A Rs_execute [4:0] $end
$var reg 5 B Rt_execute [4:0] $end
$var reg 1 C j_instruction_execute $end
$var reg 32 D j_program_counter_execute [31:0] $end
$var reg 1 E memory_to_register_execute $end
$var reg 1 F memory_write_execute $end
$var reg 6 G op_execute [5:0] $end
$var reg 1 H program_counter_multiplexer_jump_execute $end
$var reg 32 I program_counter_plus_four_execute [31:0] $end
$var reg 2 J register_destination_execute [1:0] $end
$var reg 1 K register_write_execute $end
$var reg 32 L sign_imm_execute [31:0] $end
$var reg 32 M src_A_execute [31:0] $end
$var reg 32 N src_B_execute [31:0] $end
$var reg 1 O using_HI_LO_execute $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xO
bx N
bx M
bx L
xK
bx J
bx I
xH
bx G
xF
xE
bx D
xC
bx B
bx A
bx @
x?
x>
x=
bx <
bx ;
z:
bz 9
bz 8
bz 7
z6
bz 5
bz 4
z3
bz 2
z1
z0
bz /
z.
0-
b0x ,
bz +
bz *
z)
z(
z'
bz &
bz %
x$
x#
x"
x!
$end
#1
0!
0=
b0 N
b0 M
b0 D
b0 I
b0 G
0O
0C
0H
b0 L
b0 A
b0 @
b0 B
b0 ;
0?
0>
b0 J
b0 <
0F
0E
0K
1#
#2
1$
0#
#3
1#
#4
0#
0$
#5
x!
z=
bz N
bz M
bz D
bz I
bz G
zO
zC
zH
bz L
bz @
b0x B
bz A
bz ;
z?
z>
bz J
bz <
zF
zE
zK
1#
#6
0#
b1 ,
1"
#7
1!
b1 B
1#
#8
0#
#9
0#
#10
0#
#11
0#
#12
0#
#13
0#
